// üîí ENVIRONMENT KONFƒ∞G√úRASYONU
// Bu dosya production'da ger√ßek environment variables ile deƒüi≈ütirilmelidir

// Production kontrol√º
const isProduction = window.location.hostname !== 'localhost' && 
                    !window.location.hostname.includes('127.0.0.1') && 
                    !window.location.hostname.includes('192.168.');

// Static hosting tespiti (Netlify, Vercel, GitHub Pages, vb.)
const isStaticHosting = window.location.hostname.includes('netlify.app') ||
                       window.location.hostname.includes('netlify.com') ||
                       window.location.hostname.includes('github.io') ||
                       window.location.hostname.includes('vercel.app') ||
                       window.location.hostname.includes('surge.sh');

if (isProduction && !isStaticHosting) {
    // Server-based production ortamƒ±nda - API anahtarlarƒ± server'dan fetch edilir
    console.info('üîí SERVER PRODUCTION: API anahtarlarƒ± server\'dan g√ºvenli ≈üekilde alƒ±nƒ±yor...');
    
    // Server'dan config al
    fetch('/api/config', {
        method: 'GET',
        headers: {
            'Content-Type': 'application/json',
            'X-API-Key': 'dev-key-12345' // Development key - production'da ger√ßek key
        }
    })
    .then(response => response.json())
    .then(data => {
        if (data.success && data.config) {
            // Firebase config'i window objesine y√ºkle
            Object.keys(data.config.firebase).forEach(key => {
                window[`FIREBASE_${key.toUpperCase()}`] = data.config.firebase[key];
            });
            
            console.info('‚úÖ Server-side config ba≈üarƒ±yla y√ºklendi');
            
            // Config y√ºklendikten sonra Firebase'i ba≈ülat
            if (typeof initializeFirebaseAfterConfig === 'function') {
                initializeFirebaseAfterConfig();
            }
        } else {
            console.error('‚ùå Server config alƒ±namadƒ±:', data.error);
            // Fallback deƒüerler kullan
            loadFallbackConfig();
        }
    })
    .catch(error => {
        console.error('‚ùå Server config fetch hatasƒ±:', error);
        loadFallbackConfig();
    });

} else if (isStaticHosting) {
    // Static hosting (Netlify, Vercel, vb.) - netlify-config.js y√∂netir
    console.info('üì± STATIC HOSTING: Config netlify-config.js tarafƒ±ndan y√∂netiliyor');
    
} else {
    // Development ortamƒ±nda - test deƒüerleri
    console.info('üîß DEVELOPMENT: Test environment variables y√ºklendi');
    
    window.FIREBASE_API_KEY = "AIzaSyAbI5Swc136jjPCKeH1erjoDuhG2GUPnn0";
    window.FIREBASE_AUTH_DOMAIN = "bilgisel-3e9a0.firebaseapp.com";
    window.FIREBASE_DATABASE_URL = "https://bilgisel-3e9a0-default-rtdb.firebaseio.com";
    window.FIREBASE_PROJECT_ID = "bilgisel-3e9a0";
    window.FIREBASE_STORAGE_BUCKET = "bilgisel-3e9a0.appspot.com";
    window.FIREBASE_MESSAGING_SENDER_ID = "921907280109";
    window.FIREBASE_APP_ID = "1:921907280109:web:7d9b4844067a7a1ac174e4";
    window.FIREBASE_MEASUREMENT_ID = "G-XH10LS7DW8";
}

// API rate limiting konfig√ºrasyonu
window.API_RATE_LIMIT = {
    requestsPerMinute: 60,
    requestsPerHour: 1000,
    blockDuration: 300000 // 5 dakika
};

// G√ºvenlik konfig√ºrasyonu
window.SECURITY_CONFIG = {
    maxFailedAttempts: 5,
    lockoutDuration: 900000, // 15 dakika
    sessionTimeout: 3600000, // 1 saat
    encryptLocalStorage: true,
    enableCSP: isProduction,
    blockDevTools: isProduction,
    disableConsole: isProduction
};

// Fallback config function
function loadFallbackConfig() {
    console.warn('‚ö†Ô∏è Fallback config kullanƒ±lƒ±yor - bazƒ± √∂zellikler √ßalƒ±≈ümayabilir');
    
    // Minimal fallback deƒüerler
    window.FIREBASE_API_KEY = "fallback-api-key";
    window.FIREBASE_AUTH_DOMAIN = "fallback.firebaseapp.com";
    window.FIREBASE_DATABASE_URL = "https://fallback-default-rtdb.firebaseio.com";
    window.FIREBASE_PROJECT_ID = "fallback-project";
    window.FIREBASE_STORAGE_BUCKET = "fallback.appspot.com";
    window.FIREBASE_MESSAGING_SENDER_ID = "000000000000";
    window.FIREBASE_APP_ID = "1:000000000000:web:fallback";
    window.FIREBASE_MEASUREMENT_ID = "G-FALLBACK";
}

console.info('‚úÖ Environment konfig√ºrasyonu y√ºklendi'); 