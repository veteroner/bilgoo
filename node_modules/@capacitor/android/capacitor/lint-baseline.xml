<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.11.1" type="baseline" client="gradle" dependencies="false" name="AGP (8.11.1)" variant="all" version="8.11.1">

    <issue
        id="DefaultLocale"
        message="Implicitly using the default locale is a common source of bugs: Use `String.format(Locale, ...)` instead"
        errorLine1="            String msg = String.format("
        errorLine2="                         ^">
        <location
            file="src/main/java/com/getcapacitor/BridgeWebChromeClient.java"
            line="467"
            column="26"/>
    </issue>

    <issue
        id="DefaultLocale"
        message="Implicitly using the default locale is a common source of bugs: Use `toUpperCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        errorLine1="                return mask.toUpperCase().equals(string.toUpperCase());"
        errorLine2="                            ~~~~~~~~~~~">
        <location
            file="src/main/java/com/getcapacitor/util/HostMask.java"
            line="110"
            column="29"/>
    </issue>

    <issue
        id="DefaultLocale"
        message="Implicitly using the default locale is a common source of bugs: Use `toUpperCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        errorLine1="                return mask.toUpperCase().equals(string.toUpperCase());"
        errorLine2="                                                        ~~~~~~~~~~~">
        <location
            file="src/main/java/com/getcapacitor/util/HostMask.java"
            line="110"
            column="57"/>
    </issue>

    <issue
        id="DefaultLocale"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        errorLine1="                    if (header.getKey().equalsIgnoreCase(&quot;Accept&quot;) &amp;&amp; header.getValue().toLowerCase().contains(&quot;text/html&quot;)) {"
        errorLine2="                                                                                        ~~~~~~~~~~~">
        <location
            file="src/main/java/com/getcapacitor/WebViewLocalServer.java"
            line="342"
            column="89"/>
    </issue>

    <issue
        id="SimpleDateFormat"
        message="To get local formatting use `getDateInstance()`, `getDateTimeInstance()`, or `getTimeInstance()`, or use `new SimpleDateFormat(String template, Locale locale)` with for example `Locale.US` for ASCII dates."
        errorLine1="        String timeStamp = new SimpleDateFormat(&quot;yyyyMMdd_HHmmss&quot;).format(new Date());"
        errorLine2="                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/getcapacitor/BridgeWebChromeClient.java"
            line="504"
            column="28"/>
    </issue>

    <issue
        id="SimpleDateFormat"
        message="To get local formatting use `getDateInstance()`, `getDateTimeInstance()`, or `getTimeInstance()`, or use `new SimpleDateFormat(String template, Locale locale)` with for example `Locale.US` for ASCII dates."
        errorLine1="        DateFormat df = new SimpleDateFormat(&quot;yyyy-MM-dd&apos;T&apos;HH:mm&apos;Z&apos;&quot;);"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/getcapacitor/PluginResult.java"
            line="44"
            column="25"/>
    </issue>

    <issue
        id="UnsanitizedFilenameFromContentProvider"
        message="Using `name` is unsafe as it is a filename obtained directly from a `ContentProvider`. You should sanitize it before using it for creating a `File`."
        errorLine1="        File file = new File(context.getFilesDir(), name);"
        errorLine2="                                                    ~~~~">
        <location
            file="src/main/java/com/getcapacitor/FileUtils.java"
            line="222"
            column="53"/>
    </issue>

    <issue
        id="Recycle"
        message="This `TypedArray` should be recycled after use with `#recycle()`"
        errorLine1="        TypedArray a = context.obtainStyledAttributes(attrs, R.styleable.bridge_fragment);"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/getcapacitor/BridgeFragment.java"
            line="99"
            column="32"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        message="Unnecessary; `SDK_INT` is always >= 24"
        errorLine1="            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/getcapacitor/Bridge.java"
            line="312"
            column="17"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        message="Unnecessary; `SDK_INT` is always >= 24"
        errorLine1="        boolean isRequestPermissionRequired = android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.M;"
        errorLine2="                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/getcapacitor/BridgeWebChromeClient.java"
            line="107"
            column="47"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        message="Unnecessary; `SDK_INT` is always >= 24"
        errorLine1="        boolean isVideoCaptureSupported = android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.N;"
        errorLine2="                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/getcapacitor/BridgeWebChromeClient.java"
            line="350"
            column="43"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        message="Unnecessary; `SDK_INT` is always >= 24"
        errorLine1="        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/getcapacitor/plugin/util/CapacitorHttpUrlConnection.java"
            line="444"
            column="13"/>
    </issue>

    <issue
        id="Overdraw"
        message="Possible overdraw: Root element paints background `#F0FF1414` with a theme that also paints a background (inferred theme is `@android:style/Theme.Holo`)"
        errorLine1="    android:background=&quot;#F0FF1414&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/res/layout/fragment_bridge.xml"
            line="5"
            column="5"/>
    </issue>

</issues>
